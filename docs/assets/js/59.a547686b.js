(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{611:function(s,n,e){"use strict";e.r(n);var t=e(13),a=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"utility-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#utility-types"}},[s._v("#")]),s._v(" Utility Types")]),s._v(" "),e("h3",{attrs:{id:"什么是utility-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是utility-types"}},[s._v("#")]),s._v(" 什么是Utility Types？")]),s._v(" "),e("p",[s._v("Utility Types是TypeScript的**"),e("em",[s._v("工具类型")]),e("strong",[e("em",[s._v("方便开发者更好的")])]),e("em",[s._v("约束类型")]),s._v("**")]),s._v(" "),e("h2",{attrs:{id:"partial-t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#partial-t"}},[s._v("#")]),s._v(" Partial<T>")]),s._v(" "),e("p",[s._v("将T中所有属性转换为可选属性。返回的类型可以是T的任意子集。")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("interface Todo {\n  title: string;\n  description: string;\n  done: boolean;\n}\n\nfunction updateTodo(todo: Todo, newTodo: Partial&lt;Todo>) {\n  return { ...todo, ...newTodo };\n}\n\nconst todo: Todo = {\n  title: 'First Todo',\n  description: 'this is the first todo',\n  done: false\n};\n\nupdateTodo(todo, { done: true });\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type Partial&amp;#60;T&amp;#62; = { [P in keyof T]?: T[P]; };\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("解析：")]),s._v("\nkeyof T， 索引类型查询操作符。\n对于任何类型 T， keyof T 的结果为 T 上已知的公共属性名的联合。")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('type todoKeys = keyof Todo; // "title" | "description" | "done"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("keyof 取到 T 中的属性名，in 操作符遍历属性名。可选属性操作符 ? 将所有属性定义为可选属性。")]),s._v(" "),e("h2",{attrs:{id:"required-t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#required-t"}},[s._v("#")]),s._v(" Required<T>")]),s._v(" "),e("p",[s._v("通过将T的所有属性设置为必选属性来构造一个新的类型。与Partial相对。")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("interface Example {\n  a?: string;\n  b?: string;\n}\n\nconst example1: Example = { a: 'aaa' }; // right\n\nconst example2: Required&lt;Example> = { a: 'aaa' };\n// error: Property 'b' is missing in type '{ a: string; }' but required in type 'Required&lt;Example>'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type Required&amp;#60;T&amp;#62; = { [P in keyof T]-?: T[P]; };\n// 与partial相似，遍历T中属性，并将所有属性置为必选属性\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"readonly-t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#readonly-t"}},[s._v("#")]),s._v(" Readonly<T>")]),s._v(" "),e("p",[s._v("将T中所有属性设置为只读")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("interface Todo {\n  title: string;\n}\n\nconst todo: Readonly&lt;Todo> = { title: 'First Todo' };\n\ntodo.title = 'New Title'; // Cannot assign to 'title' because it is a read-only property.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type Readonly&amp;#60;T&amp;#62; = { readonly [P in keyof T]: T[P]; };\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"record-k-t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#record-k-t"}},[s._v("#")]),s._v(" Record<K,T>")]),s._v(" "),e("p",[s._v("构造一个类型，该类型具有一组属性K，每个属性的类型为T。可用于将一个类型的属性映射为另一个类型。")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type TodoProperty = 'title' | 'description';\n\ntype Todo = Record&lt;TodoProperty, string>;\n\nconst todo: Todo = {\n  title: 'First Todo',\n  description: 'this is the first todo'\n};\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type Record&lt;K extends keyof any, T> = { [P in K]: T; };\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"pick-t-k"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pick-t-k"}},[s._v("#")]),s._v(" Pick<T,K>")]),s._v(" "),e("p",[s._v("通过在T中抽取一组属性K构建一个新类型.")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("interface Todo {\n  title: string;\n  description: string;\n  done: boolean;\n}\n\ntype TodoBase = Pick&lt;Todo, 'title' | 'done'>;\n\nconst todo: TodoBase = {\n  title: 'First Todo',\n  done: false\n};\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type Pick&lt;T, K extends keyof T> = { [p in K]: T[p] };// K是T的属性集合的子集\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"exclude-t-u"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exclude-t-u"}},[s._v("#")]),s._v(" Exclude<T,U>")]),s._v(" "),e("p",[s._v("从T中排除可分配给U的属性，剩余的属性构成新的类型")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type T0 = Exclude&lt;'a' | 'b' | 'c', 'a'>;  // \"b\" | \"c\"\n\ntype T2 = Exclude&lt;string | number | (() => void), Function>;  // string | number\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type Exclude&lt;T, U> = T extends U ? never : T;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"extract-t-u"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extract-t-u"}},[s._v("#")]),s._v(" Extract<T,U>")]),s._v(" "),e("p",[s._v("从T中抽出可分配给U的属性构成新的类型。与Exclude相反")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type T0 = Extract&lt;'a' | 'b' | 'c', 'a'>;  // \"a\"\n\n// 多参数类型约束\ninterface StringItem {\n  type: 'stringItem'\n  value: string;\n}\n\ninterface NumberItem {\n  type: 'numberItem'\n  value: number;\n}\n\ntype Item = StringItem | NumberItem;\n\nfunction addCase&lt;IType extends Item['type']>(type: IType, value: Extract&lt;Item, { type: IType }>['value']): void {\n  console.log(type, ':', value);\n}\n\naddCase('stringItem', 'value1'); // right\naddCase('numberItem', 2); // right\naddCase('stringItem', 1); // error:类型“1”的参数不能赋给类型“string”的参数\naddCase('numberItem', 'value2'); // error:类型“\"value2\"”的参数不能赋给类型“number”的参数\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type Extract&lt;T, U> = T extends U ? T : never;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"omit-t-k"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#omit-t-k"}},[s._v("#")]),s._v(" Omit<T,K>")]),s._v(" "),e("p",[s._v("从T中取出除去K的其他所有属性。与Pick相对。")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("interface Todo {\n  title: string;\n  description: string;\n  done: boolean;\n}\n\ntype TodoBase = Omit&lt;Todo, 'description'>;\n\nconst todo: TodoBase = {\n  title: 'First Todo',\n  done: false\n};\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 结合Exclude和Pick实现\ntype Omit&lt;T, K extends keyof any> = Pick&lt;T, Exclude&lt;keyof T, K>>;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"nonnullable-t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nonnullable-t"}},[s._v("#")]),s._v(" NonNullable<T>")]),s._v(" "),e("p",[s._v("去除T中的 null 和 undefined 类型")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type T0 = NonNullable&lt;number | string | undefined> // number | string\n\ntype T1 = NonNullable&lt;number | null | undefined> // number\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type NonNullable&amp;#60;T&amp;#62; = T extends null | undefined ? never : T;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"parameters-t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parameters-t"}},[s._v("#")]),s._v(" Parameters<T>")]),s._v(" "),e("p",[s._v("返回类型为T的函数的参数类型所组成的数组")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("declare function f1(arg: { a: number, b: string }): void\n\ntype T0 = Parameters&lt;() => string>;  // []\n\ntype T1 = Parameters&lt;(s: string) => void>;  // [string]\n\ntype T2 = Parameters&lt;(&amp;#60;T&amp;#62;(arg: T) => T)>;  // [unknown]\n\ntype T4 = Parameters&lt;typeof f1>;  // [{ a: number, b: string }]\n\ntype T5 = Parameters&lt;any>;  // unknown[]\n\ntype T6 = Parameters&lt;never>;  // never\n\ntype T7 = Parameters&lt;string>;  // Error: 类型“string”不满足约束“(...args: any) => any”\n\ntype T8 = Parameters&lt;Function>;  // Error: 类型“Function”不满足约束“(...args: any) => any”。类型“Function”提供的内容与签名“(...args: any): any”不匹配\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type ConstructorParameters&lt;T extends new (...args: any) => any> = T extends new (...args: infer P) => any ? P : never;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("解析：")])]),s._v(" "),e("p",[s._v("条件类型中的类型推断(高级类型章节)(原文档截图)：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://pic1.zhimg.com/80/v2-fd2e007898727b79e60affda44f90624_720w.jpg",alt:"img"}})]),s._v(" "),e("p",[s._v("翻译：")]),s._v(" "),e("p",[s._v("在条件类型中使用extends时，可以声明一个infer来表示有一个类型变量需要推断。这个可推断的类型变量可以在条件类型的true分支上引用。同一个类型变量可能有多个推断的位置。")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type Foo&amp;#60;T&amp;#62; = T extends { a: infer U, b: infer U } ? U : never;\n\ntype T10 = Foo&lt;{ a: string, b: string }>;  // string\n\ntype T11 = Foo&lt;{ a: string, b: number }>;  // string | number\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"returntype-t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returntype-t"}},[s._v("#")]),s._v(" ReturnType<T>")]),s._v(" "),e("p",[s._v("function T的返回类型")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("declare function f1(): { a: number, b: string }\n\ntype T0 = ReturnType&lt;() => string>;  // string\n\ntype T1 = ReturnType&lt;(s: string) => void>;  // void\n\ntype T2 = ReturnType&lt;(&amp;#60;T&amp;#62;() => T)>;  // {}\n\ntype T3 = ReturnType&lt;(&lt;T extends U, U extends number[]>() => T)>;  // number[]\n\ntype T4 = ReturnType&lt;typeof f1>;  // { a: number, b: string }\n\ntype T5 = ReturnType&lt;any>;  // any\n\ntype T6 = ReturnType&lt;never>;  // any\n\ntype T7 = ReturnType&lt;string>;  // Error: 类型“string”不满足约束“(...args: any) => any”\n\ntype T8 = ReturnType&lt;Function>;  // Error:类型“Function”不满足约束“(...args: any) => any”。类型“Function”提供的内容与签名“(...args: any): any”不匹配\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type ReturnType&lt;T extends (...args: any) => any> = T extends (...args: any) => infer R ? R : any;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"instancetype-t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instancetype-t"}},[s._v("#")]),s._v(" InstanceType<T>")]),s._v(" "),e("p",[s._v("返回构造函数类型T的实例类型")]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("class C {\n  x = 0;\n  y = 0;\n}\n\ntype T0 = InstanceType&lt;typeof C>;  // C\n\ntype T1 = InstanceType&lt;any>;  // any\n\ntype T2 = InstanceType&lt;never>;  // any\n\ntype T3 = InstanceType&lt;string>;  // error:类型“string”不满足约束“new (...args: any) => any”\n\ntype T4 = InstanceType&lt;Function>; // error:类型“Function”不满足约束“new (...args: any) => any”。类型“Function”提供的内容与签名“new (...args: any): any”不匹配\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("源码：")])]),s._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("type InstanceType&lt;T extends new (...args: any) => any> = T extends new (...args: any) => infer R ? R : any;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])}),[],!1,null,null,null);n.default=a.exports}}]);