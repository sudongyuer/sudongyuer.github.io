(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{625:function(s,a,e){"use strict";e.r(a);var n=e(13),t=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"javascript-数组-api-全解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-数组-api-全解析"}},[s._v("#")]),s._v(" javaScript 数组 API 全解析")]),s._v(" "),e("p",[s._v("以下文章来源于freeCodeCamp ，作者Humilitas")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650754710&idx=1&sn=8f5745ca32a57d6f2a4207d2ca7b2c0a&chksm=88664d1abf11c40cc0780728e002878e4a686f291356ac223faa6407f3cb8753a16fdc447d18&scene=0&xtrack=1&key=00c622ed0e1cf3b67c2a725d08b32f0909fb628a5356cc6fbd53f555deca349e56925286aa85e164dfc62f0cb469b289fcea85d7dbefa87cd2ddb0a6bfecdfec4a8c0e0a3fa16ae2f365f8fba08288d3f638af17c1fac51a0deb39e5243e625c2995e648175d381b3ec33e33b3b688662f784c969370b3b55d91f38fe5e52c74&ascene=1&uin=Mjc2ODI5ODIzNw%3D%3D&devicetype=iMac+MacBookAir10%2C1+OSX+OSX+10.16+build(20F71)&version=13000411&nettype=WIFI&lang=zh_CN&fontScale=100&exportkey=A1SZeQpRkXuqtDPHxzMGeHk%3D&pass_ticket=xWeTicRJ81dmf1QXnujrfnsskqPXZm%2BtXQVOPI%2FNYJk1w4MFo9gsb2wY%2ByzQpNAW&wx_header=0&fontgear=2.000000#",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"http://wx.qlogo.cn/mmhead/Q3auHgzwzM6ichuvXZdAUaOkC1kDlYj52XU1woNXuibqjkVqPnzzt2bQ/0",alt:"freeCodeCamp"}}),e("strong",[s._v("freeCodeCamp")]),s._v("非营利组织 freeCodeCamp.org 自 2014 年成立以来，以“帮助人们免费学习编程”为使命，创建了大量免费教程。我们帮助全球数百万人学习编程，希望每个人都有机会获得免费的优质的学习资源，成为开发者或者运用编程去解决问题。"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("在编程世界中，"),e("code",[s._v("数组")]),s._v("是指元素的集合。数组将数据作为元素进行存储，并在需要时将其取出。")]),s._v(" "),e("p",[s._v("在支持数组的编程语言中广泛地采用了这个数据结构。")]),s._v(" "),e("p",[s._v("这个手册会介绍 JavaScript 数组的所有知识。你将会学到复杂数据处理、解构、常用数组方法等内容。")]),s._v(" "),e("h1",{attrs:{id:"我为什么写这篇文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#我为什么写这篇文章"}},[s._v("#")]),s._v(" 我为什么写这篇文章")]),s._v(" "),e("p",[s._v("网上已经有很多介绍 JavaScript 数组的优秀文章，那我为什么还要写一篇相同主题的文章呢？动机是什么？")]),s._v(" "),e("p",[s._v("多年来，通过和学员的交流，我意识到大多数初学者都需要这样一个教程：通过示例从头到尾彻底地介绍数组。")]),s._v(" "),e("p",[s._v("所以我决定编写这样一篇包含大量示例的文章。如果你是初学者，希望这篇文章对你有所帮助。")]),s._v(" "),e("p",[s._v("不过，这个手册也能帮助有经验的开发者梳理知识。我在写作这篇文章的过程中，也重新学习了相关知识。我们开始吧。")]),s._v(" "),e("h1",{attrs:{id:"javascript-中的数组是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-中的数组是什么"}},[s._v("#")]),s._v(" JavaScript 中的数组是什么")]),s._v(" "),e("p",[s._v("在 JavaScript 中，一对方括号"),e("code",[s._v("（[]）")]),s._v(" 表示一个数组，其中的所有元素以逗号"),e("code",[s._v("（,）")]),s._v(" 分隔。")]),s._v(" "),e("p",[s._v("在 JavaScript 中，数组可以是任意类型元素组成的集合。这意味着，创建一个数组，它的元素类型可以是 String、Boolean、Number、Object，甚至是另一个数组。")]),s._v(" "),e("p",[s._v("示例中的数组包含 4 个元素，类型分别是：Number、Boolean、String 和 Object。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const mixedTypedArray = [100, true, 'freeCodeCamp', {}];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("元素在数组中的位置称为"),e("code",[s._v("索引（index）")]),s._v("，JavaScript 中的数组索引是从 0 开始计数的，每加入一个新元素，其对应的索引加 1。")]),s._v(" "),e("p",[s._v("例如，上面的数组中，"),e("code",[s._v("100")]),s._v(" 这个元素的位置是 "),e("code",[s._v("索引 0")]),s._v("，"),e("code",[s._v("true")]),s._v(" 的位置是"),e("code",[s._v("索引 1")]),s._v("，"),e("code",[s._v("'freeCodeCamp'")]),s._v(" 的位置是"),e("code",[s._v("索引 2")]),s._v("，以此类推。")]),s._v(" "),e("p",[s._v("数组中的元素数量决定了数组长度（length）。比如说，上面的数组长度是 4。")]),s._v(" "),e("p",[s._v("有趣的是，JavaScript 数组的长度是可变的，你可以随时将它指定为一个非负整数值。我们稍后会学习更多相关知识。")]),s._v(" "),e("h1",{attrs:{id:"如何创建数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何创建数组"}},[s._v("#")]),s._v(" 如何创建数组")]),s._v(" "),e("p",[s._v("在 JavaScript 中有多种方式可以创建数组，最直接的方式是把数组字面量赋值给一个变量。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const salad = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("也可以使用 "),e("code",[s._v("Array")]),s._v(" 构造函数来创建数组。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const salad = new Array('🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑');\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("blockquote",[e("p",[s._v("注意："),e("code",[s._v("new Array(2)")]),s._v(" 会创建一个长度为 2 的空数组，然而 "),e("code",[s._v("new Array(1,2)")]),s._v(" 则会创建一个包含两个元素（1 和 2）的数组。")])]),s._v(" "),e("p",[s._v("另外，"),e("code",[s._v("Array.of()")]),s._v(" 和 "),e("code",[s._v("Array.from()")]),s._v(" 方法，以及"),e("code",[s._v("展开")]),s._v("运算符（"),e("code",[s._v("...")]),s._v("）也可以创建数组。我们后面会学习它们。")]),s._v(" "),e("h2",{attrs:{id:"如何访问数组元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何访问数组元素"}},[s._v("#")]),s._v(" 如何访问数组元素")]),s._v(" "),e("p",[s._v("可以使用数组索引来获取数组元素，访问数组元素需要用到方括号 "),e("code",[s._v("[]")]),s._v("。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const element = array[index];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("根据使用场景，你可能需要一个一个地访问数组元素或者使用循环来遍历。")]),s._v(" "),e("p",[s._v("可以像这样使用索引来访问数组元素：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const salad = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\nsalad[0]; // '🍅'\nsalad[2]; // '🥦'\nsalad[5]; // '🥕'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("也可以利用数组长度（length 属性）值，反向遍历访问数组元素。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const salad = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\nconst len = salad.length;\nsalad[len - 1]; // '🥑'\nsalad[len - 3]; // '🌽'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("可以使用一般的 "),e("code",[s._v("for")]),s._v(" 循环或 "),e("code",[s._v("forEach")]),s._v(" 方法来遍历数组，也可以使用其它方式来遍历。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const salad = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\n\nfor(let i=0; i<salad.length; i++) {\n  console.log(`Element at index ${i} is ${salad[i]}`);\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("结果如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/KpF7T3OPIQSialW2weBzaIZbvm5nwBbFNXaRAK8XiaXibJg9E83N9USbibJUcpS8p0pWbKDVibiaFFibTjLPlzTrJa1rg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),s._v(" "),e("h2",{attrs:{id:"如何向数组中添加元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何向数组中添加元素"}},[s._v("#")]),s._v(" 如何向数组中添加元素")]),s._v(" "),e("p",[s._v("可以使用 "),e("code",[s._v("push()")]),s._v(" 方法向数组中插入一个元素，它会将元素追加到数组的末尾。我们往沙拉中加入一些花生：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const salad = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\nsalad.push('🥜');\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("现在沙拉数组看起来像这样：")]),s._v(" "),e("p",[s._v('["🍅", "🍄", "🥦", "🥒", "🌽", "🥕", "🥑", "🥜"]')]),s._v(" "),e("p",[s._v("注意，"),e("code",[s._v("push()")]),s._v(" 方法会把元素追加到数组末尾，如果想要在数组头部插入一个元素，需要使用 "),e("code",[s._v("unshift()")]),s._v(" 方法。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const salad = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\nsalad.unshift('🥜');\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("现在沙拉数组看起来像这样：")]),s._v(" "),e("p",[s._v('["🥜", "🍅", "🍄", "🥦", "🥒", "🌽", "🥕", "🥑"]')]),s._v(" "),e("h2",{attrs:{id:"如何移除数组元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何移除数组元素"}},[s._v("#")]),s._v(" 如何移除数组元素")]),s._v(" "),e("p",[s._v("移除单个数组元素的最简单方式是使用 "),e("code",[s._v("pop()")]),s._v(" 方法。每次调用 "),e("code",[s._v("pop()")]),s._v(" 方法，都会移除数组末尾的那个元素。"),e("code",[s._v("pop()")]),s._v(" 方法的返回值是那个被移除的元素，这个方法会改变原始数组。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const salad = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\nsalad.pop(); // 🥑\n\nconsole.log(salad); // ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕']\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("使用 "),e("code",[s._v("shift()")]),s._v(" 方法可以移除数组头部的一个元素。与 "),e("code",[s._v("pop()")]),s._v(" 方法类似，"),e("code",[s._v("shift()")]),s._v(" 方法会返回那个被移除的元素，并且会改变原始数组。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const salad = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\nsalad.shift(); // 🍅\n\nconsole.log(salad); // ['🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"如何克隆数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何克隆数组"}},[s._v("#")]),s._v(" 如何克隆数组")]),s._v(" "),e("p",[s._v("可以使用 "),e("code",[s._v("slice()")]),s._v(" 方法来克隆数组。注意，"),e("code",[s._v("slice()")]),s._v(" 方法不改变原始数组，而是创建一个原始数组的浅拷贝副本。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const salad = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\nconst saladCopy = salad.slice();\n\nconsole.log(saladCopy); // ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑']\n\nsalad === saladCopy; // returns false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("也可以使用"),e("code",[s._v("展开")]),s._v("运算符来创建数组副本，我们很快会学到。")]),s._v(" "),e("h2",{attrs:{id:"如何判断某个值是不是数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何判断某个值是不是数组"}},[s._v("#")]),s._v(" 如何判断某个值是不是数组")]),s._v(" "),e("p",[s._v("可以使用 "),e("code",[s._v("Array.isArray(value)")]),s._v(" 方法来判断某个值是不是数组，如果传入的值是一个数组的话，它会返回 true。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Array.isArray(['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑']); // returns true\nArray.isArray('🍅'); // returns false\nArray.isArray({ 'tomato': '🍅'}); // returns false\nArray.isArray([]); // returns true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h1",{attrs:{id:"数组解构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组解构"}},[s._v("#")]),s._v(" 数组解构")]),s._v(" "),e("p",[s._v("ECMAScript 6（ES6）提供了一些新语法，可以一次性从数组中获取多个元素并赋值给多个变量。它有助于保持代码简洁明了。这个新语法被称为解构语法。")]),s._v(" "),e("p",[s._v("下面是使用解构语法从数组中获取多个元素的例子：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("let [tomato, mushroom, carrot] = ['🍅', '🍄', '🥕'];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("现在就可以使用这些变量了：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("console.log(tomato, mushroom, carrot); // Output, 🍅 🍄 🥕\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("如果不使用解构语法的话，代码会是这样：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("let vegetables = ['🍅', '🍄', '🥕'];\nlet tomato = vegetables[0];\nlet mushroom= vegetables[1];\nlet carrot= vegetables[2];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("所以，解构语法能够有助于减少代码量、极大地提高生产力。")]),s._v(" "),e("h2",{attrs:{id:"如何为变量指定默认值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何为变量指定默认值"}},[s._v("#")]),s._v(" 如何为变量指定默认值")]),s._v(" "),e("p",[s._v("使用解构语法时，可以为变量指定默认值，当数组中没有对应的元素或者元素的值为 "),e("code",[s._v("undefined")]),s._v(" 时，就会使用默认值。")]),s._v(" "),e("p",[s._v("下面的例子中，我们为 mushroom 变量指定了一个默认值。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("let [tomato , mushroom = '🍄'] = ['🍅'];\nconsole.log(tomato); // '🍅'\nconsole.log(mushroom ); // '🍄'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"如何跳过某个数组元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何跳过某个数组元素"}},[s._v("#")]),s._v(" 如何跳过某个数组元素")]),s._v(" "),e("p",[s._v("使用解构获取数组元素时，可以跳过某个元素。比如说，你可能只关注数组的部分元素，这时候这个语法就派上用场了。")]),s._v(" "),e("p",[s._v("下面的例子中，我们跳过了“蘑菇”元素。注意表达式左边变量声明中的空格。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("let [tomato, , carrot] = ['🍅', '🍄', '🥕'];\n\nconsole.log(tomato); // '🍅'\nconsole.log(carrot); // '🥕'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"嵌套数组解构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#嵌套数组解构"}},[s._v("#")]),s._v(" 嵌套数组解构")]),s._v(" "),e("p",[s._v("JavaScript 中，数组是可以嵌套的。这意味着一个数组的元素可以是另一个数组。数组可以嵌套任意深度。")]),s._v(" "),e("p",[s._v("例如，我们创建一个嵌套数组 "),e("code",[s._v("fruits")]),s._v("，其元素包含一些水果和一个“蔬菜”数组。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("let fruits = ['🍈', '🍍', '🍌', '🍉', ['🍅', '🍄', '🥕']];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("要如何获取以上数组中的 '🥕' 呢？同样的，不使用解构的话，可以这样做：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const veg = fruits[4]; // returns the array ['🍅', '🍄', '🥕']\nconst carrot = veg[2]; // returns '🥕'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("或者，也可以使用简写语法：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("fruits[4][2]; // returns '🥕'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("还可以使用解构语法：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("let [,,,,[,,carrot]] = ['🍈', '🍍', '🍌', '🍉', ['🍅', '🍄', '🥕']];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h1",{attrs:{id:"如何使用展开语法-spread-syntax-和剩余参数-rest-parameter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何使用展开语法-spread-syntax-和剩余参数-rest-parameter"}},[s._v("#")]),s._v(" 如何使用展开语法（Spread Syntax）和剩余参数（Rest Parameter）")]),s._v(" "),e("p",[s._v("从 ES6 开始，通过 "),e("code",[s._v("...")]),s._v("（连续的三个点）可以在数组解构中使用展开语法和剩余参数。")]),s._v(" "),e("ul",[e("li",[s._v("使用剩余参数时，"),e("code",[s._v("...")]),s._v(" 出现在解构语法表达式的左边。")]),s._v(" "),e("li",[s._v("使用展开语法时，"),e("code",[s._v("...")]),s._v(" 出现在解构语法表达式的右边。")])]),s._v(" "),e("h2",{attrs:{id:"如何使用剩余参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何使用剩余参数"}},[s._v("#")]),s._v(" 如何使用剩余参数")]),s._v(" "),e("p",[s._v("通过"),e("code",[s._v("剩余参数")]),s._v("，可以将剩下的元素映射到一个新的数组中。剩余参数必须是解构语法中的最后一个变量。")]),s._v(" "),e("p",[s._v("下面的例子中，我们把数组的前两个参数分别映射到了 tomato 和 mushroom 变量中，剩下的元素则使用 "),e("code",[s._v("...")]),s._v(" 映射到了 "),e("code",[s._v("rest")]),s._v(" 变量中。"),e("code",[s._v("rest")]),s._v(" 是一个新数组，其中包含了剩下的元素。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const [tomato, mushroom, ...rest] = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\n\nconsole.log(tomato); // '🍅'\nconsole.log(mushroom); // '🍄'\nconsole.log(rest); // [\"🥦\", \"🥒\", \"🌽\", \"🥕\", \"🥑\"]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"如何使用展开运算符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何使用展开运算符"}},[s._v("#")]),s._v(" 如何使用展开运算符")]),s._v(" "),e("p",[s._v("使用展开运算符，可以这样来克隆现有的数组：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const salad = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\n\nconst saladCloned = [...salad];\nconsole.log(saladCloned); // [\"🍅\", \"🍄\", \"🥦\", \"🥒\", \"🌽\", \"🥕\", \"🥑\"]\n\nsalad === saladCloned // false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h1",{attrs:{id:"解构的使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解构的使用场景"}},[s._v("#")]),s._v(" 解构的使用场景")]),s._v(" "),e("p",[s._v("我们一起来看看数组解构、展开运算符和剩余参数的一些激动人心的使用场景。")]),s._v(" "),e("h2",{attrs:{id:"使用解构交换变量值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用解构交换变量值"}},[s._v("#")]),s._v(" 使用解构交换变量值")]),s._v(" "),e("p",[s._v("使用数组解构语法可以很轻松地交换两个变量的值。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("let first = '😔';\nlet second = '🙂';\n[first, second] = [second, first];\n\nconsole.log(first);  // '🙂'\nconsole.log(second); // '😔'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h2",{attrs:{id:"合并数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并数组"}},[s._v("#")]),s._v(" 合并数组")]),s._v(" "),e("p",[s._v("我们可以通过合并两个数组的所有元素来创建一个新数组（不改变原始数组）。假设现在有两个数组——一个包含一些笑脸，另一个包含一些蔬菜。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const emotion = ['🙂', '😔'];\nconst veggies = ['🥦', '🥒', '🌽', '🥕'];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("现在，我们要把它们合并成一个新数组。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('const emotionalVeggies = [...emotion, ...veggies];\nconsole.log(emotionalVeggies); // ["🙂", "😔", "🥦", "🥒", "🌽", "🥕"]\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h1",{attrs:{id:"javascript-数组方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-数组方法"}},[s._v("#")]),s._v(" JavaScript 数组方法")]),s._v(" "),e("p",[s._v("到目前为止，我们已经了解了一些数组属性和方法。我们做一个简单的回顾：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("push()")]),s._v(" – 在数组末尾插入一个元素。")]),s._v(" "),e("li",[e("code",[s._v("unshift()")]),s._v(" – 在数组头部插入一个元素。")]),s._v(" "),e("li",[e("code",[s._v("pop()")]),s._v(" – 移除数组末尾的最后一个元素。")]),s._v(" "),e("li",[e("code",[s._v("shift()")]),s._v(" – 移除数组头部的第一个元素。")]),s._v(" "),e("li",[e("code",[s._v("slice()")]),s._v(" – 创建数组的浅拷贝副本。")]),s._v(" "),e("li",[e("code",[s._v("Array.isArray()")]),s._v(" – 判断某个值是不是数组。")]),s._v(" "),e("li",[e("code",[s._v("length")]),s._v(" – 数组的长度。")])]),s._v(" "),e("p",[s._v("现在我们将通过示例来学习其它重要的数组方法。")]),s._v(" "),e("h2",{attrs:{id:"如何创建数组、删除数组元素、更新数组元素以及访问数组元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何创建数组、删除数组元素、更新数组元素以及访问数组元素"}},[s._v("#")]),s._v(" 如何创建数组、删除数组元素、更新数组元素以及访问数组元素")]),s._v(" "),e("p",[s._v("这一节，我们要学习用于创建新数组、移除数组元素及清空数组、访问数组元素等操作的方法。")]),s._v(" "),e("h3",{attrs:{id:"concat-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#concat-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("concat()")]),s._v(" 方法")]),s._v(" "),e("p",[e("code",[s._v("concat()")]),s._v(" 方法可以将多个数组合并在一起并返回合并后的数组。这是一个不可变方法，意味着它不会改变现有的数组。")]),s._v(" "),e("p",[s._v("拼接两个数组：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const first = [1, 2, 3];\nconst second = [4, 5, 6];\n\nconst merged = first.concat(second);\n\nconsole.log(merged); // [1, 2, 3, 4, 5, 6]\nconsole.log(first); // [1, 2, 3]\nconsole.log(second); // [4, 5, 6]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("使用 "),e("code",[s._v("concat()")]),s._v(" 方法也可以拼接两个以上的数组。我们可以这样拼接任意数量的数组：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("array.concat(arr1, arr2,..,..,..,arrN);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("示例如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const first = [1, 2, 3];\nconst second = [4, 5, 6];\nconst third = [7, 8, 9];\n\nconst merged = first.concat(second, third);\n\nconsole.log(merged); // [1, 2, 3, 4, 5, 6, 7, 8, 9]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h3",{attrs:{id:"join-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#join-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("join()")]),s._v(" 方法")]),s._v(" "),e("p",[e("code",[s._v("join()")]),s._v(" 方法使用一个分隔符将数组的所有元素拼接成一个字符串，并返回这个字符串。默认的分隔符是逗号（"),e("code",[s._v(",")]),s._v("）。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const emotions = ['🙂', '😍', '🙄', '😟'];\n\nconst joined = emotions.join();\nconsole.log(joined); // \"🙂,😍,🙄,😟\"\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("可以传入一个自定义分隔符用于拼接数组元素。下面是一个使用自定义分隔符拼接数组元素的例子：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const joined = emotions.join('<=>');\nconsole.log(joined); // \"🙂<=>😍<=>🙄<=>😟\"\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("在空数组上调用 "),e("code",[s._v("join()")]),s._v(" 方法，返回一个空字符串：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('[].join() // returns ""\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"fill-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fill-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("fill()")]),s._v(" 方法")]),s._v(" "),e("p",[e("code",[s._v("fill()")]),s._v(" 方法使用一个固定值填充数组。可以使用这个固定值填充整个数组，也可以只覆盖选定的元素。注意，"),e("code",[s._v("fill()")]),s._v("方法会改变原始数组。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const colors = ['red', 'blue', 'green'];\n\ncolors.fill('pink');\nconsole.log(colors); // [\"pink\", \"pink\", \"pink\"]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("下面是一个使用 "),e("code",[s._v("fill()")]),s._v(" 方法覆盖数组的最后两个元素的例子：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const colors = ['red', 'blue', 'green'];\n\ncolors.fill('pink', 1,3); // [\"red\", \"pink\", \"pink\"]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("这个例子中，"),e("code",[s._v("fill()")]),s._v(" 方法的第一个参数是用来填充数组的值，第二个参数是替换的起始索引（从 "),e("code",[s._v("0")]),s._v(" 开始计算），最后一个参数是终止索引（最大值可以是 "),e("code",[s._v("colors.length")]),s._v("）。")]),s._v(" "),e("p",[s._v("请查看这个 Twitter 主题以了解 "),e("code",[s._v("fill()")]),s._v(" 方法的实际用法。")]),s._v(" "),e("p",[s._v("你也可以查看这个示例项目：https://github.com/atapas/array-fill-color-cards。")]),s._v(" "),e("h3",{attrs:{id:"includes-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#includes-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("includes()")]),s._v(" 方法")]),s._v(" "),e("p",[s._v("可以使用 "),e("code",[s._v("includes()")]),s._v(" 方法来判断一个数组中是否包含某个元素，如果包含则返回 "),e("code",[s._v("true")]),s._v("，否则返回 "),e("code",[s._v("false")]),s._v("。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const names = ['tom', 'alex', 'bob', 'john'];\n\nnames.includes('tom'); // returns true\nnames.includes('july'); // returns false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h3",{attrs:{id:"indexof-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#indexof-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("indexOf()")]),s._v(" 方法")]),s._v(" "),e("p",[s._v("可以使用 "),e("code",[s._v("indexOf()")]),s._v(" 方法找到某个元素在数组中的索引位置。它返回这个元素在数组中首次出现的索引，如果没有找到这个元素则返回 "),e("code",[s._v("-1")]),s._v("。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const names = ['tom', 'alex', 'bob', 'john'];\n\nnames.indexOf('alex'); // returns 1\nnames.indexOf('rob'); // returns -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("还有一个 "),e("code",[s._v("lastIndexOf()")]),s._v(" 方法，可以找出某个元素在数组中最后出现的位置。与 "),e("code",[s._v("indexOf()")]),s._v(" 类似，"),e("code",[s._v("lastIndexOf()")]),s._v("在找不到这个元素时也返回 "),e("code",[s._v("-1")]),s._v("。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const names = ['tom', 'alex', 'bob', 'tom'];\n\nnames.indexOf('tom'); // returns 0\nnames.lastIndexOf('tom'); // returns 3\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h3",{attrs:{id:"reverse-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reverse-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("reverse()")]),s._v(" 方法")]),s._v(" "),e("p",[s._v("顾名思义，"),e("code",[s._v("reverse()")]),s._v(" 方法将数组中元素的位置颠倒，最后一个元素变成第一个、第一个元素变成最后一个。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const names = ['tom', 'alex', 'bob'];\n\nnames.reverse(); // returns [\"bob\", \"alex\", \"tom\"]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("code",[s._v("reverse()")]),s._v(" 方法会改变原始数组。")]),s._v(" "),e("h3",{attrs:{id:"sort-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sort-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("sort()")]),s._v(" 方法")]),s._v(" "),e("p",[e("code",[s._v("sort()")]),s._v(" 方法可能是最常用的数组方法之一。"),e("code",[s._v("sort()")]),s._v(" 方法默认会把元素转换为字符串再对它们进行排序。默认的排序方式是升序排列。"),e("code",[s._v("sort()")]),s._v(" 方法会改变原始数组。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const names = ['tom', 'alex', 'bob'];\n\nnames.sort(); // returns [\"alex\", \"bob\", \"tom\"]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("code",[s._v("sort()")]),s._v(" 方法接收一个可选的比较器函数作为参数，可以编写一个比较器函数传入 "),e("code",[s._v("sort()")]),s._v(" 方法来覆盖默认的排序行为。")]),s._v(" "),e("p",[s._v("假设现在有一个数字数组，我们使用比较器函数将它按升序和降序排序：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const numbers = [23, 5, 100, 56, 9, 13, 37, 10, 1]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("首先，调用 "),e("code",[s._v("sort()")]),s._v(" 方法，并观察结果：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("numbers.sort();\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("现在，排序后的数组为 [1, 10, 100, 13, 23, 37, 5, 56, 9]。这并不是我们预期的结果。得到这个结果是因为 "),e("code",[s._v("sort()")]),s._v(" 方法默认会将元素转换为字符串，再基于字符串诸个字符对应的 "),e("code",[s._v("UTF-16")]),s._v(" 编码值进行比较。")]),s._v(" "),e("p",[s._v("为了解决这个问题，我们编写一个比较器函数。这是用于升序排序的：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function ascendingComp(a, b){\n  return (a-b);\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("把比较器函数传入 "),e("code",[s._v("sort()")]),s._v(" 方法：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("numbers.sort(ascendingComp); // retruns [1, 5, 9, 10, 13, 23, 37, 56, 100]\n\n/* \n\n也可以使用行内函数：\n\nnumbers.sort(function(a, b) {\n  return (a-b);\n});\n\n或者使用箭头函数的写法：\n\nnumbers.sort((a, b) => (a-b));\n\n*/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[s._v("降序排序：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("numbers.sort((a, b) => (b-a));\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("查看这个 GitHub 仓库以获取更多排序示例和技巧：https://github.com/atapas/js-array-sorting。")]),s._v(" "),e("h3",{attrs:{id:"splice-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#splice-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("splice()")]),s._v(" 方法")]),s._v(" "),e("p",[e("code",[s._v("splice()")]),s._v(" 方法可以帮助你向数组中添加元素、更新数组元素以及移除数组元素。刚开始接触这个方法可能会令人困惑，不过只要你理解了它的正确用法，就能够掌握。")]),s._v(" "),e("p",[e("code",[s._v("splice()")]),s._v(" 方法的主要目标是从数组中移除元素。它会返回由被移除的元素组成的数组，并且会改变原始数组。你也可以用它来向数组中添加元素或者替换数组中的元素。")]),s._v(" "),e("p",[s._v("使用 "),e("code",[s._v("splice()")]),s._v(" 方法向数组中添加一个元素，需要传入插入的目标位置、从目标位置算起想要删除的元素数量以及要插入的元素。")]),s._v(" "),e("p",[s._v("下面的例子中，我们在索引为 "),e("code",[s._v("1")]),s._v(" 的位置上插入了一个元素 "),e("code",[s._v("zack")]),s._v("，没有删除任何元素。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const names = ['tom', 'alex', 'bob'];\n\nnames.splice(1, 0, 'zack');\n\nconsole.log(names); // [\"tom\", \"zack\", \"alex\", \"bob\"]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("看看下面的例子，我们移除了索引 "),e("code",[s._v("2")]),s._v(" 位置之后的一个元素（即第三个元素），并添加了一个元素 "),e("code",[s._v("zack")]),s._v("。"),e("code",[s._v("splice()")]),s._v(" 方法返回一个由移除掉的元素——"),e("code",[s._v("bob")]),s._v("——组成的数组。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const names = ['tom', 'alex', 'bob'];\n\nconst deleted = names.splice(2, 1, 'zack');\n\nconsole.log(deleted); // [\"bob\"]\nconsole.log(names); // [\"tom\", \"alex\", \"zack\"]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("查看这个 Twitter 主题以了解如何使用 "),e("code",[s._v("splice()")]),s._v(" 方法清空数组。")]),s._v(" "),e("h2",{attrs:{id:"静态数组方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#静态数组方法"}},[s._v("#")]),s._v(" 静态数组方法")]),s._v(" "),e("p",[s._v("在 JavaScript 中，数组有三个静态方法。我们已经讨论过 "),e("code",[s._v("Array.isArray()")]),s._v("，接下来要探讨其余两个方法。")]),s._v(" "),e("h3",{attrs:{id:"array-from-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#array-from-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("Array.from()")]),s._v(" 方法")]),s._v(" "),e("p",[s._v("假设有以下 HTML 代码片段，其中包含一个 div 和一些列表元素：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<div id="main">\n  <ul>\n    <ol type="1">\n      <li>...</li>\n      <li>...</li>\n      <li>...</li>\n      <li>...</li>\n      <li>...</li>\n      <li>...</li>\n      <li>...</li>\n      <li>...</li>\n      <li>...</li>\n      <li>...</li>\n    </ol>\n  </ul> \n</div>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[s._v("我们使用 "),e("code",[s._v("getElementsByTagName()")]),s._v(" 方法获取这些列表元素。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("document.getElementsByTagName('li');\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("它返回如下 "),e("code",[s._v("HTMLCollection")]),s._v(" 对象：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/KpF7T3OPIQSialW2weBzaIZbvm5nwBbFNbbK8Fpf3scrUHTfsqLcib3owZicHUXAGjibiciahwonm1e1w4wKRIJGs7Lg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),s._v(" "),e("p",[s._v("HTMLCollection 是类数组对象")]),s._v(" "),e("p",[s._v("它和数组类似，我们试着使用 "),e("code",[s._v("forEach")]),s._v(" 来遍历它：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("document.getElementsByTagName('li').forEach(() => {\n // Do something here..\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("猜猜会输出什么？会报出以下错误：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/KpF7T3OPIQSialW2weBzaIZbvm5nwBbFNq1lGicbrtZFJl0l3xQZjPh2xovCCzxZQfmaXyEZqGmzMiczLX3xsSTqQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),s._v(" "),e("p",[s._v("在类数组对象上调用 forEach 发生错误")]),s._v(" "),e("p",[s._v("为什么会这样？这是因为 "),e("code",[s._v("HTMLCollection")]),s._v(" 并不是数组，而是 "),e("code",[s._v("类数组")]),s._v(" 对象，所以不能使用 "),e("code",[s._v("forEach")]),s._v(" 来遍历它。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/KpF7T3OPIQSialW2weBzaIZbvm5nwBbFNtOvIjKYlm2mVPWhdZrkttb6wQLp315ZpREAnk3gdTKh1KD8V8ib7KWA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),s._v(" "),e("p",[s._v("其原型（proto）是 Object")]),s._v(" "),e("p",[s._v("这里就需要用到 "),e("code",[s._v("Array.from()")]),s._v(" 方法了，"),e("code",[s._v("Array.from()")]),s._v(" 能将类数组对象转换为数组，进而能够在它上面执行所有数组操作。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const collection = Array.from(document.getElementsByTagName('li'))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这里的 "),e("code",[s._v("collection")]),s._v(" 是一个数组：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/KpF7T3OPIQSialW2weBzaIZbvm5nwBbFNt6ZyTSOiadvE5LPGET84ICLSWaQmt92oB2qicMp9n8suaicdEib3ibNmx8Q/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),s._v(" "),e("p",[s._v("其原型为 Array")]),s._v(" "),e("h3",{attrs:{id:"array-of-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#array-of-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("Array.of()")]),s._v(" 方法")]),s._v(" "),e("p",[e("code",[s._v("Array.of()")]),s._v(" 可以使用任意数量任意类型的元素创建一个新数组。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Array.of(2, false, 'test', {'name': 'Alex'})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("输出如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/KpF7T3OPIQSialW2weBzaIZbvm5nwBbFNVpXTr2u4EeQSDsffvJ2Kicw3OmBlaicObcCh0fTkzTT9iaujFcicMba0FA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),s._v(" "),e("p",[s._v("Array.of() 方法的输出结果")]),s._v(" "),e("h2",{attrs:{id:"数组迭代器方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组迭代器方法"}},[s._v("#")]),s._v(" 数组迭代器方法")]),s._v(" "),e("p",[s._v("现在我们要学习数组迭代器方法。这些方法在执行数组迭代、计算、做判断、过滤元素等操作时很有用。")]),s._v(" "),e("p",[s._v("到目前为止，我们还没见过对象数组的示例。在这一节，我们将会使用下面的对象数组来解释和演示这些迭代器方法。")]),s._v(" "),e("p",[s._v("这个数组包含了一些订阅各种付费课程的学生的信息：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("let students = [\n   {\n      'id': 001,\n      'f_name': 'Alex',\n      'l_name': 'B',\n      'gender': 'M',\n      'married': false,\n      'age': 22,\n      'paid': 250,  \n      'courses': ['JavaScript', 'React']\n   },\n   {\n      'id': 002,\n      'f_name': 'Ibrahim',\n      'l_name': 'M',\n      'gender': 'M',\n      'married': true,\n      'age': 32,\n      'paid': 150,  \n      'courses': ['JavaScript', 'PWA']\n   },\n   {\n      'id': 003,\n      'f_name': 'Rubi',\n      'l_name': 'S',\n      'gender': 'F',\n      'married': false,\n      'age': 27,\n      'paid': 350,  \n      'courses': ['Blogging', 'React', 'UX']\n   },\n   {\n      'id': 004,\n      'f_name': 'Zack',\n      'l_name': 'F',\n      'gender': 'M',\n      'married': true,\n      'age': 36,\n      'paid': 250,  \n      'courses': ['Git', 'React', 'Branding']\n   } \n];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br")])]),e("p",[s._v("让我们开始吧。所有数组迭代器方法都接收一个函数作为参数，需要在这个函数中声明迭代逻辑。")]),s._v(" "),e("h3",{attrs:{id:"filter-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filter-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("filter()")]),s._v(" 方法")]),s._v(" "),e("p",[e("code",[s._v("filter()")]),s._v(" 方法用所有满足过滤条件的元素来创建一个新数组。我们要找出女学生，所以过滤条件应该是 "),e("code",[s._v("gender === 'F'")]),s._v("。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const femaleStudents = students.filter((element, index) => {\n  return element.gender === 'F';\n})\n\nconsole.log(femaleStudents);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("输出如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/KpF7T3OPIQSialW2weBzaIZbvm5nwBbFND3C3sSREq2mVV7ibGupsbcicT9ObWN4wT4KZz4cophPOBVWeib4ROkpMg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),s._v(" "),e("p",[s._v("结果是正确的，名为 "),e("code",[s._v("Rubi")]),s._v(" 的学生是目前唯一的女学生。")]),s._v(" "),e("h3",{attrs:{id:"map-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#map-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("map()")]),s._v("方法")]),s._v(" "),e("p",[e("code",[s._v("map()")]),s._v(" 方法遍历整个数组，依次对数组元素执行回调函数并用这些返回值创建一个新数组。我们将会创建一个由 "),e("code",[s._v("students")]),s._v(" 数组中所有学生的全名组成的新数组。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const fullNames = students.map((element, index) => {\n  return {'fullName': element['f_name'] + ' ' + element['l_name']}\n});\n\nconsole.log(fullNames);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("输出如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/KpF7T3OPIQSialW2weBzaIZbvm5nwBbFNSy4EQ36pr6GHUibrt54FIrczfMu63ZVYdUnibJrtmDEWRHt3qU1xNnkg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),s._v(" "),e("p",[s._v("这里我们可以看到由包含 "),e("code",[s._v("fullName")]),s._v(" 属性的对象组成的数组，"),e("code",[s._v("fullName")]),s._v(" 是由 student 对象的 "),e("code",[s._v("f_name")]),s._v(" 和 "),e("code",[s._v("l_name")]),s._v(" 属性计算得到的。")]),s._v(" "),e("h3",{attrs:{id:"reduce-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reduce-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("reduce()")]),s._v(" 方法")]),s._v(" "),e("p",[e("code",[s._v("reduce()")]),s._v(" 方法对每个数组元素执行 reducer 函数，并将其结果汇总为单个返回值。我们将会在 "),e("code",[s._v("students")]),s._v(" 数组中应用一个 reducer 函数来计算所有学生支付的总额。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const total = students.reduce(\n   (accumulator, student, currentIndex, array) => {\n      accumulator = accumulator + student.paid;\n      return (accumulator);\n   }, \n0);\n\nconsole.log(total); // 1000\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("在上面的代码中，")]),s._v(" "),e("ul",[e("li",[s._v("我们将"),e("code",[s._v("累加器（accumulator）")]),s._v("初始化为 "),e("code",[s._v("0")]),s._v("。")]),s._v(" "),e("li",[s._v("我们对每个 student 对象执行 "),e("code",[s._v("reduce")]),s._v(" 方法，读取 "),e("code",[s._v("paid")]),s._v(" 属性值并把它累加在累加器上。")]),s._v(" "),e("li",[s._v("最后，返回累加器。")])]),s._v(" "),e("h3",{attrs:{id:"some-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#some-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("some()")]),s._v(" 方法")]),s._v(" "),e("p",[e("code",[s._v("some()")]),s._v(" 方法返回一个布尔值（true/false），其返回值取决于数组中是否至少有一个元素符合回调函数中的判断条件。我们来看看是否有学生的年龄小于 30 岁。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("let hasStudentBelow30 = students.some((element, index) => {\n  return element.age < 30;\n});\n\nconsole.log(hasStudentBelow30); // true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("是的，我们看到至少有一个学生的年龄是小于 30 岁的。")]),s._v(" "),e("h3",{attrs:{id:"find-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#find-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("find()")]),s._v(" 方法")]),s._v(" "),e("p",[s._v("使用 "),e("code",[s._v("some()")]),s._v(" 方法，我们已经看到有一个 30 岁以下的学生。让我们找出这个学生。")]),s._v(" "),e("p",[s._v("为此，我们会用到 "),e("code",[s._v("find()")]),s._v(" 方法，它会返回数组中第一个满足判断条件的元素。")]),s._v(" "),e("p",[s._v("还有另一个相关的方法 "),e("code",[s._v("findIndex()")]),s._v("，这个方法返回我们使用 "),e("code",[s._v("find()")]),s._v(" 方法找到的元素的索引，如果没有符合条件的元素则返回 "),e("code",[s._v("-1")]),s._v("。")]),s._v(" "),e("p",[s._v("下面的例子中，我们向 "),e("code",[s._v("find()")]),s._v(" 方法中传入了一个函数用来判断学生的年龄，它会返回满足判断条件的学生。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const student = students.find((element, index) => {\n  return element.age < 30;\n});\n\nconsole.log(student);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("输出如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/KpF7T3OPIQSialW2weBzaIZbvm5nwBbFNdNpgn1vicF0EaIa6XQCSCMwQkd9o72ALh3CqJahBh5mhiaAtYGLmH39Q/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),s._v(" "),e("p",[s._v("可以看到，他就是 22 岁的 Alex，我们找到他了。")]),s._v(" "),e("h3",{attrs:{id:"every-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#every-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("every()")]),s._v(" 方法")]),s._v(" "),e("p",[e("code",[s._v("every()")]),s._v(" 方法检查是否数组的每个元素都满足给定的判断条件。让我们检查一下是不是所有学生都订阅了至少两门课程。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const atLeastTwoCourses = students.every((elements, index) => {\n  return elements.courses.length >= 2;\n});\n\nconsole.log(atLeastTwoCourses); // true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("正如预期，我们看到结果为 "),e("code",[s._v("true")]),s._v("。")]),s._v(" "),e("h2",{attrs:{id:"提案中的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提案中的方法"}},[s._v("#")]),s._v(" 提案中的方法")]),s._v(" "),e("p",[s._v("截至 2021 年 5 月，ECMAScript 提案中有一个新的数组方法，即 "),e("code",[s._v("at()")]),s._v(" 方法。")]),s._v(" "),e("h3",{attrs:{id:"at-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#at-方法"}},[s._v("#")]),s._v(" "),e("code",[s._v("at()")]),s._v(" 方法")]),s._v(" "),e("p",[s._v("提案中的 "),e("code",[s._v("at()")]),s._v(" 方法可以让你使用负数索引来访问数组元素（译注：使用负数索引即从数组末尾开始访问元素，"),e("code",[s._v("-1")]),s._v(" 表示最后一个元素、"),e("code",[s._v("-2")]),s._v(" 表示倒数第二个元素……以此类推）。截至目前，这个方法还不可用。现在只能使用正数索引从数组开头访问元素。")]),s._v(" "),e("p",[s._v("目前想从数组末尾开始访问数组元素要借助 length 属性。通过引入 "),e("code",[s._v("at()")]),s._v(" 方法，就可以在单个方法里面使用正数索引或者负数索引来访问元素。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const junkFoodILove = ['🥖', '🍔', '🍟', '🍕', '🌭', '🥪', '🌮', '🍿'];\n\njunkFoodILove.at(0); // 🥖\njunkFoodILove.at(3); // 🍕\njunkFoodILove.at(-1); // 🍿\njunkFoodILove.at(-5); // 🍕\njunkFoodILove.at(-8); // 🥖\njunkFoodILove.at(10); // undefined\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("这是一个简单示例：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_gif/KpF7T3OPIQSialW2weBzaIZbvm5nwBbFNtbv1MS3Ak8pfIjmwktgZlSGOoK2rk4s4ZCZicCIfdgdKcWdr69pLoYw/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1",alt:"图片"}})]),s._v(" "),e("p",[s._v("JavaScript at() 方法示例")]),s._v(" "),e("p",[s._v("在 "),e("code",[s._v("at()")]),s._v(" 方法加入 JavaScript 语言之前，你可以使用这个 polyfill 来获得它的功能。查看这个 GitHub 仓库以获取 "),e("code",[s._v("at()")]),s._v("方法的示例：https://github.com/atapas/js-array-at-method。")]),s._v(" "),e("h1",{attrs:{id:"结束之前"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结束之前"}},[s._v("#")]),s._v(" 结束之前......")]),s._v(" "),e("p",[s._v("希望你觉得这篇文章有价值，也希望它能够帮助你更好地理解 JavaScript 数组。请多多练习文中的示例，以便更好地掌握它们。你可以在我的 GitHub 仓库中找到所有代码示例。")]),s._v(" "),e("p",[s._v("保持联系，我平时活跃在 Twitter (@tapasadhikary)，欢迎关注我。")]),s._v(" "),e("p",[s._v("推荐阅读：")]),s._v(" "),e("ul",[e("li",[s._v("为什么需要了解类数组对象？")]),s._v(" "),e("li",[s._v("关于 JavaScript 排序方法（sort）的 5 个实用技巧")]),s._v(" "),e("li",[s._v("JavaScript 中清空数组的各种方式及其后果")]),s._v(" "),e("li",[s._v("使用 map、reduce、filter 和其它数组迭代器增强你的 JavaScript 水平")]),s._v(" "),e("li",[s._v("为什么需要了解 JavaScript 数组的 at() 方法？")])]),s._v(" "),e("hr"),s._v(" "),e("p",[s._v("原文链接：https://www.freecodecamp.org/news/the-javascript-array-handbook/")]),s._v(" "),e("p",[s._v("作者：TAPAS ADHIKARY")]),s._v(" "),e("p",[s._v("译者：Humilitas")])])}),[],!1,null,null,null);a.default=t.exports}}]);